### Variables
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

set $term kitty
set $filemanager nemo
set $menu tofi-drun | xargs swaymsg exec --
set $menu-run tofi-run | xargs swaymsg exec --
set $scripts $HOME/.config/sway/scripts

font pango:FuraCode Nerd Font 11
default_border pixel 3
default_floating_border pixel 2
hide_edge_borders smart
gaps inner 6

# Swayfx options
corner_radius 8
titlebar_separator disable

# Idle configuration
exec swayidle -w \
  timeout 900 'swaylock -f -c 000000' \
  timeout 1200 'swaymsg "output * dpms off"' \
  resume 'swaymsg "output * dpms on"' \
  before-sleep 'swaylock -f -c 000000'

input * {
  repeat_delay 250
  repeat_rate 25
  accel_profile 'flat'
  pointer_accel 0
  scroll_factor 1
}

### Input configuration
input "type:touchpad" {
  tap enabled
  natural_scroll enabled
  accel_profile "adaptive" 
  pointer_accel 0.5
}

input type:keyboard {
  xkb_layout 'us,ru'
  xkb_options 'grp:lctrl_lwin_toggle,ctrl:nocaps'
}

client.focused "#8aadf4" "#8aadf4" "#ffffff" "#8aadf4"

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
bindsym --to-code {
  # Start a terminal
  $mod+Return exec $term
  
  # Kill focused window
  $mod+Shift+c kill
  
  # Start your launcher
  $mod+p exec $menu
  $mod+Shift+p exec $menu-run
  
  # Start filemanager
  $mod+e exec $filemanager
  
  # Screenshot
  Print exec 'grim -g "$(slurp)" - | wl-copy'

  $mod+z exec 'cliphist list | tofi --prompt-text "history" --padding-left="1%" | cliphist decode | wl-copy'
}

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym --to-code $mod+Shift+r reload

# Exit sway (logs you out of your Wayland session)
bindsym --to-code $mod+Shift+q exec swaynag -t warning -m 'Do you really want to exit sway?' -B 'Yes, exit sway' 'swaymsg exit'


# Brightness
bindsym {
  XF86MonBrightnessDown exec light -U 10
  XF86MonBrightnessUp exec light -A 10
}

# Volume
bindsym {
  XF86AudioRaiseVolume exec 'pactl set-sink-volume @DEFAULT_SINK@ +5%'
  XF86AudioLowerVolume exec 'pactl set-sink-volume @DEFAULT_SINK@ -5%'
  XF86AudioMute exec 'pactl set-sink-mute @DEFAULT_SINK@ toggle'
}

#
# Moving around:
#
bindsym --to-code {
    # Move your focus around
  $mod+$left focus left
  $mod+$down focus down
  $mod+$up focus up
  $mod+$right focus right
  # Or use $mod+[up|down|left|right]
  $mod+Left focus left
  $mod+Down focus down
  $mod+Up focus up
  $mod+Right focus right

  # Move the focused window with the same, but add Shift
  $mod+Shift+$left move left
  $mod+Shift+$down move down
  $mod+Shift+$up move up
  $mod+Shift+$right move right
  # Ditto, with arrow keys
  $mod+Shift+Left move left
  $mod+Shift+Down move down
  $mod+Shift+Up move up
  $mod+Shift+Right move right
}

#
# Workspaces:
#
bindsym {
  # Switch to workspace
  $mod+1 workspace number 1
  $mod+2 workspace number 2
  $mod+3 workspace number 3
  $mod+4 workspace number 4
  $mod+5 workspace number 5
  $mod+6 workspace number 6
  $mod+7 workspace number 7
  $mod+8 workspace number 8
  $mod+9 workspace number 9
  $mod+0 workspace number 10
  # Move focused container to workspace
  $mod+Shift+1 move container to workspace number 1
  $mod+Shift+2 move container to workspace number 2
  $mod+Shift+3 move container to workspace number 3
  $mod+Shift+4 move container to workspace number 4
  $mod+Shift+5 move container to workspace number 5
  $mod+Shift+6 move container to workspace number 6
  $mod+Shift+7 move container to workspace number 7
  $mod+Shift+8 move container to workspace number 8
  $mod+Shift+9 move container to workspace number 9
  $mod+Shift+0 move container to workspace number 10
  # Note: workspaces can have any name you want, not just numbers.
  # We just use 1-10 as the default.
}


#
# Layout stuff:
#

bindsym --to-code {
  $mod+n splith
  $mod+v splitv
  # Switch the current container between different layout styles
  $mod+f1 layout stacking
  $mod+f2 layout tabbed
  $mod+b layout tabbed
  $mod+f3 layout toggle split
  $mod+f4 floating toggle, floating toggle

  # Make the current focus fullscreen
  $mod+f fullscreen

  # Toggle the current focus between tiling and floating mode
  $mod+Shift+space floating toggle

  # Swap focus between the tiling area and the floating area
  $mod+Shift+Tab focus mode_toggle

  # Move focus to the parent container
  $mod+a focus parent

  $mod+y sticky toggle
}

# Resizing containers:
mode 'resize' {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode 'default'
    bindsym Escape mode 'default'
    bindsym --to-code $mod+r mode 'default'
}
bindsym --to-code $mod+r mode 'resize'

# Maximize
bindsym --to-code $mod+Shift+f exec $scripts/maximize.bash

mode 'maximize' {
  bindsym --to-code {
    $mod+Shift+f exec $scripts/unmaximize.bash
    $mod+Shift+c kill
  }
}

bindsym $mod+Tab exec swayr switch-window
bindsym --to-code $mod+grave exec swayr next-window current-workspace
bindsym --to-code $mod+Shift+grave exec swayr next-window current-workspace

# Rules
include config.d/rules

# Autostart
include config.d/autostart
